//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.16

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "punished_message")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(column_type = "Text")]
    pub content: String,
    #[sea_orm(column_type = "Double")]
    pub timestamp: f64,
    pub anti_spam_config_id: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::anti_spam_config::Entity",
        from = "Column::AntiSpamConfigId",
        to = "super::anti_spam_config::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    AntiSpamConfig,
}

impl Related<super::anti_spam_config::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AntiSpamConfig.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
